#!/usr/bin/env node

const fs = require("fs");

const themes = [
  { name: "indigo", accent: "indigo" },
  { name: "blue", accent: "blue" },
  { name: "zinc", accent: "zinc" },
];

// Tailwind classes

const tailwindJSON = generateTailwindJSON(require("../theme/config")());
write("./theme/theme.json", tailwindJSON);

themes.forEach((options) => {
  const themeConfig = require("../theme/config")(options);
  const themeCSS = generateThemeCSS(themeConfig);

  write(`./app/assets/lookbook/css/themes/${options.name}.css`, themeCSS);
});

// Utils

function generateThemeCSS(themeConfig) {
  const cssThemeLines = [`:root {`];
  Object.keys(themeConfig).forEach((key) => {
    cssThemeLines.push(`  --lookbook-${kebabCase(key)}: ${themeConfig[key]};`);
  });
  cssThemeLines.push("}");
  return cssThemeLines.join("\n");
}

function generateTailwindJSON(themeConfig) {
  const theme = { lookbook: {} };
  Object.keys(themeConfig).forEach((key) => {
    theme.lookbook[kebabCase(key)] = `var(--lookbook-${kebabCase(key)})`;
  });
  return JSON.stringify(theme);
}

function write(path, content) {
  try {
    fs.writeFileSync(path, content);
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
}

function kebabCase(str) {
  return str.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
}
